{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\n\n// Prepare a slice of our global state\ncreateSlice({\n  name: 'counter',\n  initialState: initialState,\n  reducers: {\n    increment(state) {\n      // Here i am allowed to mutate the state\n      // the toolkit will take care so in reality i dont mutate the state again\n      // redux use imgur a\n      state.counter += 1;\n    },\n    decrement(state) {},\n    increase(state) {},\n    toggleCounter(state) {}\n  }\n});\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === 'increment') {\n    // I return new object with the state not merging ONLY OVERWRITE the existing state.\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n  ;\n  if (action.type === 'increase') {\n    return {\n      // i attach payload to the action\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n  ;\n  if (action.type === 'toggle') {\n    return {\n      showCounter: !state.showCounter,\n      counter: 0\n    };\n  }\n  ;\n  return state;\n};\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"names":["createStore","createSlice","initialState","counter","showCounter","name","reducers","increment","state","decrement","increase","toggleCounter","counterReducer","action","type","amount","store"],"sources":["D:/Programming Stuff/ReactJS Mastery/Redux - Crash Course/01-starting-project (1)/01-starting-project/src/store/index.js"],"sourcesContent":["import { createStore } from 'redux';\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\n\r\nconst initialState = {\r\n    counter: 0,\r\n    showCounter: true\r\n}\r\n\r\n// Prepare a slice of our global state\r\ncreateSlice({\r\n    name: 'counter',\r\n    initialState: initialState,\r\n    reducers: {\r\n        increment(state) {\r\n            // Here i am allowed to mutate the state\r\n            // the toolkit will take care so in reality i dont mutate the state again\r\n            // redux use imgur a\r\n            state.counter += 1;\r\n        },\r\n        decrement(state) {},\r\n        increase(state) {},\r\n        toggleCounter(state) {}\r\n    }\r\n});\r\n\r\nconst counterReducer = (state = initialState, action) => {\r\n    if (action.type === 'increment') {\r\n        // I return new object with the state not merging ONLY OVERWRITE the existing state.\r\n        return {\r\n            counter: state.counter + 1,\r\n            showCounter: state.showCounter\r\n        };\r\n    };\r\n\r\n    if (action.type === 'increase') {\r\n        return {\r\n            // i attach payload to the action\r\n            counter: state.counter + action.amount,\r\n            showCounter: state.showCounter\r\n        };\r\n    }\r\n\r\n    if (action.type === 'decrement') {\r\n        return {\r\n            counter: state.counter - 1,\r\n            showCounter: state.showCounter\r\n        };\r\n    };\r\n\r\n    if (action.type === 'toggle') {\r\n        return {\r\n            showCounter: !state.showCounter,\r\n            counter: 0\r\n        };\r\n    };\r\n\r\n    return state;\r\n};\r\n\r\n\r\nconst store = createStore(counterReducer);\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,WAAW,QAAQ,kBAAkB;AAG9C,MAAMC,YAAY,GAAG;EACjBC,OAAO,EAAE,CAAC;EACVC,WAAW,EAAE;AACjB,CAAC;;AAED;AACAH,WAAW,CAAC;EACRI,IAAI,EAAE,SAAS;EACfH,YAAY,EAAEA,YAAY;EAC1BI,QAAQ,EAAE;IACNC,SAASA,CAACC,KAAK,EAAE;MACb;MACA;MACA;MACAA,KAAK,CAACL,OAAO,IAAI,CAAC;IACtB,CAAC;IACDM,SAASA,CAACD,KAAK,EAAE,CAAC,CAAC;IACnBE,QAAQA,CAACF,KAAK,EAAE,CAAC,CAAC;IAClBG,aAAaA,CAACH,KAAK,EAAE,CAAC;EAC1B;AACJ,CAAC,CAAC;AAEF,MAAMI,cAAc,GAAGA,CAACJ,KAAK,GAAGN,YAAY,EAAEW,MAAM,KAAK;EACrD,IAAIA,MAAM,CAACC,IAAI,KAAK,WAAW,EAAE;IAC7B;IACA,OAAO;MACHX,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEI,KAAK,CAACJ;IACvB,CAAC;EACL;EAAC;EAED,IAAIS,MAAM,CAACC,IAAI,KAAK,UAAU,EAAE;IAC5B,OAAO;MACH;MACAX,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAGU,MAAM,CAACE,MAAM;MACtCX,WAAW,EAAEI,KAAK,CAACJ;IACvB,CAAC;EACL;EAEA,IAAIS,MAAM,CAACC,IAAI,KAAK,WAAW,EAAE;IAC7B,OAAO;MACHX,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEI,KAAK,CAACJ;IACvB,CAAC;EACL;EAAC;EAED,IAAIS,MAAM,CAACC,IAAI,KAAK,QAAQ,EAAE;IAC1B,OAAO;MACHV,WAAW,EAAE,CAACI,KAAK,CAACJ,WAAW;MAC/BD,OAAO,EAAE;IACb,CAAC;EACL;EAAC;EAED,OAAOK,KAAK;AAChB,CAAC;AAGD,MAAMQ,KAAK,GAAGhB,WAAW,CAACY,cAAc,CAAC;AAEzC,eAAeI,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}